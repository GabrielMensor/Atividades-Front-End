/*
 * REGRAS GERAL DE RESET
 * Vale observar que todo navegador possui de fábrica alguns "estilos"
 * estes estilos deixam os elementos mais básicos do html com determinados
 * tamanhos de fontes e principalmente espaçamento (margin e padding) entre
 * elementos. Por vezes esses "espaços adicionais de fábrica" complicam o
 * a customização de nosso projeto pois queremos afastar e posicionar um
 * elemento com exatidão e na nossa conta o que veio "de fábrica" acaba
 * somando junto e atrapalhando. Por isso um bom costume é sempre "limpar"
 * esse css padrão do navegador, as próximas linhas desse arquivo fazem
 * essa limpeza, chamamos isso de RESET. Após essa "limpa" podemos iniciar o
 * nosso próprio CSS costumizado.
 **/
html {
  box-sizing: border-box;
  font-size: 16px;
}

/* prettier-ignore */
*, *:before, *:after {
  box-sizing: inherit;
}

/* prettier-ignore */
body, h1, h2, h3, h4, h5, h6, p, ol, ul {
  margin: 0;
  padding: 0;
  font-weight: normal;
}

/* prettier-ignore */
ol, ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

/*
 * O SEU ESTILO CSS DESTE EXERCÍCIO PODE VIR DESTA LINHA PARA BAIXO
 * Da próxima linha vazia após esse comentário em diante o CSS é "seu"
 * podem criar a regra que acharem necessário para chegar no resultado
 * visual que solicitei no exercício, recomendo o uso de CLASSES de CSS
 * sempre que possível, vocês podem "conectar" um estilo a um elemento do
 * HTML usando classes sempre que ele tiver o atributo class="zzzz" escrito
 * em seu código de declaração, assim todos os elementos que possuirem a
 * mesma "class" terão o mesmo estilo visual, e assim poderemos repetir
 * estilos tranquilamente sem precisar radicalizar a estilização de
 * todas as tags DIVs de uma só vez no projeto.
 **/

/* Quando um elemento possui a declaração de um "ID" podemos considera-lo
 * como um elemento único, logo ele não poderá se repetir ao longo do HTML
 * nem do CSS. Estilos para ID devem começar com # e para classes começar
 * com . (ponto). Por exemplo podemos limitar a largura de nosso chat...
 **/

body {
  height: 100vh;  /* definida a altura para funcionar a centralização pela altura (usado vh, neste caso, toda a altura do viewport) */
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-content: center;
}

header {
  padding: 5px;
  border: 1px solid black;
  background-color: white;
  color: #070707;
}

#chat-screen {
  width: 500px;
  border: 1px solid black;
  background-color: #ccc;
}

.messages-list .message-item { /* para mensagens do atendente (que não tem a classe message-user) */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 10px;
}

.msg-chat {
    border-radius: 10px;
    border: 1px solid black;
    padding: 7px;
    background-color: #070707;
    color: white;
}

.messages-list .message-user .msg-chat {
  background-color: rgb(0, 225, 0);
  color: white;
}

.messages-list .message-user { /* para mensagens do atendido (que tem a classe message-user) */
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

#form-chat-send {
  display: flex;
  justify-content: center;
  padding: 10px;
  border-top: 1px solid #5c5c5c;
  justify-content: space-between;
}

#message {
  width: 78%;
  padding: 10px;
  border-radius: 10px;
}
#submit-button {
  width: 20%;
  border-radius: 10px;
  background-color: rgb(10, 139, 10);
  color: #fff;
  transition: all 0.75s ease;
}
#submit-button:hover {
  cursor: pointer;
  background-color: rgb(37, 164, 37);
}
#submit-button:active {
  cursor: pointer;
  background-color: rgb(107, 202, 107);
} 